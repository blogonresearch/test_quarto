{
  "hash": "a93e6ff9f3d71097ed9fc8cc359fcd1c",
  "result": {
    "markdown": "---\ntitle: Plotting Moderation Effects With ggplot2\nauthor: \"Shu Fai Cheung\"\ndate: '2022-09-11'\ncategories: [\"R\", \"moderation\"]\n---\n\n\n\n\nThere are some R packages that help\nresearchers to plot moderation (interaction)\neffects: The linear relations between\n`x` (independent variable /\npredictor) and `y` (dependent variable /\noutcome variable) for\ntwo or more levels of `w` (moderator). For example, I\nhave been using [visreg](https://pbreheny.github.io/visreg/)\nfor multiple regression models fitted by `lm()`\nfor a long time. It is simple to use and supports\nboth base R graphics and `ggplot2`.\n[stdmod](https://sfcheung.github.io/stdmod/index.html),\nwhich I maintained, also has the function\n[plotmod](https://sfcheung.github.io/stdmod/articles/plotmod.html)\nfor plotting simple effects in moderated regression.\nFor structural equation modelling, [semTools](https://github.com/simsem/semTools/wiki)\ncan be used to plot interaction for latent\nvariables using [plotProbe()](https://rdrr.io/cran/semTools/man/plotProbe.html).\n`plotProbe()` can also be used to on observed\nvariables using this [workaround](https://groups.google.com/g/lavaan/c/h_LHQUFbx0k/m/jmQwRJEqBAAJ).\n\nHowever, there may be case in which all\nwe need is just two or more lines, and\nall we have are the simple effects: Two\nor more sets of intercepts of slopes.\n\nThis is how to plot the simple effect:\n\nSuppose we want to plot the simple\neffects of `x`  on `y` conditional on `w`\n(the moderator).\nFrom the output of some functions, we\nhave the slopes and intercepts\nwhen `w` is \"Low\" or \"High\":\n\n`w` is \"Low\": intercept = 2,  slope = 1\n\n`w` is \"High\": intercept = 3, slope = 2\n\nWrite a simple function to compute the points\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simple regression model\nxyline <- function(x, a, b) {a + b * x}\n```\n:::\n\n\nSet the range for `x`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Range of x\nx <- c(0, 10)\n```\n:::\n\n\nCompute the predicted values of `y` at\nthe lower and upper limit of the range\nof `x`, for each level of `w`, when\nall other predictors of `y` in the model,\nif any, are equal to zero:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate the two points when moderator = \"Low\"\ndat0 <- data.frame(Moderator = \"Low\",\n                   x = x,\n                   y = xyline(x, a = 2, b = 1))\n# Generate the two points when moderator = \"High\"\ndat1 <- data.frame(Moderator = \"High\",\n                   x = x,\n                   y = xyline(x, a = 3, b = 2))\n```\n:::\n\n\nCombine the datasets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- rbind(dat0, dat1)\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Moderator  x  y\n1       Low  0  2\n2       Low 10 12\n3      High  0  3\n4      High 10 23\n```\n:::\n:::\n\n\nDraw the lines using `ggplot2`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\np <- ggplot(dat, aes(x = x, y = y, color = Moderator)) +\n            geom_line() +\n            scale_color_manual(values = c(\"Low\" = \"blue\", \"High\" = \"red\"))\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_original-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThis plot can then be modified as necessary:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np2 <- p + xlab(\"Independent Variable\") +\n          ylab(\"Dependent Variable\")\np2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_edited-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThis solution can be used for multiple\nregression or structural equation modelling.\n\nThough not as elegant as using\npackages devoted to plotting moderation\neffects, this solution may be good\nenough for some simple scenarios. I\nbelieve it can be further improved. However,\nif we want more, maybe it is better to\nuse packages like `semTools` and\n`visreg`.\n\nP.S.: This post is based on a suggestion I\nposted to the Google Group for `lavaan`.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}